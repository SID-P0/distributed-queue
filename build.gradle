plugins {
	id 'java'
	id 'org.springframework.boot' version '3.3.0' // Changed to a stable GA version
	id 'io.spring.dependency-management' version '1.1.5' // Aligned with Spring Boot 3.3.0
	id 'com.google.protobuf' version "0.9.4"
}

def protobufVersion = '3.25.3'

group = 'com.backend'
version = '0.0.1-SNAPSHOT'

java {
	toolchain {
		languageVersion = JavaLanguageVersion.of(22)
	}
}

repositories {
	mavenCentral()
}

bootRun {
	if (project.hasProperty('appJvmArgs')) {
		jvmArgs project.appJvmArgs.split('\\s+') // Split by space to get individual args
	}
}

dependencies {
	// Spring Boot Starters
	implementation 'org.springframework.boot:spring-boot-starter-web'
	implementation 'org.springframework.boot:spring-boot-starter-security' // Kept one instance

	// Spring Kafka
	implementation 'org.springframework.kafka:spring-kafka'

	// Protobuf
	// implementation files('../Projects/shared-protos/build/libs/protos-0.0.2.jar') // Keep commented if not actively using this local jar
	implementation "com.google.protobuf:protobuf-java:${protobufVersion}"
	implementation "com.google.protobuf:protobuf-java-util:${protobufVersion}"

	// SpringDoc OpenAPI (Swagger)
	implementation 'org.springdoc:springdoc-openapi-starter-webmvc-ui:2.5.0' // This version is generally fine for Spring Boot 3.x

	// Test Dependencies
	testImplementation 'org.springframework.boot:spring-boot-starter-test'
	testImplementation 'org.springframework.kafka:spring-kafka-test'
	testImplementation 'org.springframework.security:spring-security-test'
	testRuntimeOnly 'org.junit.platform:junit-platform-launcher'
}

// Configuration for the Protobuf plugin
protobuf {
	protoc {
		// Download protoc compiler artifact from Maven Central
		artifact = "com.google.protobuf:protoc:${protobufVersion}"
	}
	// No 'sourceSets' block needed here if using the default 'src/main/proto'
	// and not generating gRPC or other special configurations.
}


tasks.named('test') {
	useJUnitPlatform()
}