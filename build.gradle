plugins {
	id 'java'
	id 'org.springframework.boot' version '3.3.0'
	id 'io.spring.dependency-management' version '1.1.5'
	id 'com.google.protobuf' version '0.9.4'
}

group = 'com.backend'
version = '0.0.1-SNAPSHOT'

java {
	toolchain {
		languageVersion = JavaLanguageVersion.of(21)
	}
}

// Centralize dependency versions for easy updates
ext {
	protobufVersion = '3.25.3'
	springdocVersion = '2.5.0'
	confluentVersion = '7.6.1'
}

repositories {
	mavenCentral()
	maven {
		url "https://packages.confluent.io/maven/"
	}
}

// Use BOM to ensure compatible springdoc dependencies
dependencyManagement {
	imports {
		mavenBom "org.springdoc:springdoc-openapi:${springdocVersion}"
	}
}

dependencies {
	// --- Spring Boot Core ---
	implementation 'org.springframework.boot:spring-boot-starter-web'
	implementation 'org.springframework.boot:spring-boot-starter-security'
	implementation 'org.springframework.kafka:spring-kafka'

	// --- Data Persistence ---
	implementation 'org.springframework.boot:spring-boot-starter-data-jpa'
	implementation 'org.springframework.boot:spring-boot-starter-data-redis'
	runtimeOnly 'org.postgresql:postgresql'

	// --- Protobuf & Kafka Serialization ---
	implementation "com.google.protobuf:protobuf-java:${protobufVersion}"
	implementation "com.google.protobuf:protobuf-java-util:${protobufVersion}"
	implementation('io.confluent:kafka-protobuf-serializer:7.6.0') {
		exclude group: 'io.swagger.core.v3', module: 'swagger-annotations'
	}
	// --- Swagger / OpenAPI ---
	implementation 'org.springdoc:springdoc-openapi-starter-webmvc-ui:2.5.0'

	// --- Developer Tools ---
	compileOnly 'org.projectlombok:lombok'
	annotationProcessor 'org.projectlombok:lombok'

	// --- Testing ---
	testImplementation 'org.springframework.boot:spring-boot-starter-test'
	testImplementation 'org.springframework.kafka:spring-kafka-test'
	testImplementation 'org.springframework.security:spring-security-test'
	testRuntimeOnly 'org.junit.platform:junit-platform-launcher'
}

configurations.all {
	resolutionStrategy.eachDependency { details ->
		if (details.requested.group == 'io.swagger.core.v3' &&
				details.requested.name == 'swagger-annotations') {
			details.useVersion '2.2.20'
		}
	}
}

// Configuration for the Protobuf plugin
protobuf {
	protoc {
		artifact = "com.google.protobuf:protoc:${protobufVersion}"
	}
}

tasks.named('test') {
	useJUnitPlatform()
}

bootRun {
	if (project.hasProperty('appJvmArgs')) {
		jvmArgs project.appJvmArgs.split('\\s+')
	}
}
